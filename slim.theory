Website
  import
    'library' into bob,
    '/path/to/my.theory' into myns,
    'complicated.js' into cool;

  theory main uses bob
    body is |sepia;
       Navigator
       Header
       #main
         Menu
         MyContent
       Footer

    fn sepia() -> 1;

    ff fraggle()
      div
        -> style me + bro;
      
  theory MyContent extends Content
    #content
      #needs-override is |clean; is |sepia;
        div

  theory Content
    #content
      .some
      .other
         .things
      #needs-override is |blacknwhite;

    gobblyGook = 'see spot run';

  theory Navigator
    #navbar is fixedBar('top', 24px); @mobile is gone;
      a
        img
      ul is dropdown();
        li
          a

    ff sepia()
      block
        -> style bob
           where bob = 147;
        <- yield bob = bob * 2, janet = bob * 3;
        ...
          -> style janet;

    ff sepia2()
      Colorable
        <- style { set prop: sepiafy(prop, val) for prop, val in colors }
	   where colors = {from this.props keep colorProperties};
    
    
    // complex properties should 'register' somehow with parent object, so 'font: 16pt/18pt bold Aria;' registers four properties
    colorProperties = ['background-color', 'color', 'border-color', 'font-color', 'background-image' ];

    fn sepiafy(prop, val) -> if (prop is Image) then val.sepia(100) elif (prop is Color) then sepia(val) else val endif;

    /*(red << 16) | (green << 8) | blue
      where
        red = (c.red * .393) + (c.green *.769) + (c.blue * .189),
        green = (c.red * .349) + (c.green *.686) + (c.blue * .168),
        blue = (c.red * .272) + (c.green *.534) + (c.blue * .131);*/

    ff clean()
      ...
        <- style { set prop:null for prop in this.props.keys };

  class Font : CssSerializable    
    fn toCSS() -> "";

