// Generated by CoffeeScript 1.4.0
(function() {
  var FFAction, FFCaseTree, FFNodeDef, FFNodeFn, FragFn, GrammarBase, SWY,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  GrammarBase = (function() {

    function GrammarBase(nodeType, meta) {
      this.nodeType = nodeType;
      this.meta = meta;
    }

    GrammarBase.prototype.getNodeDesc = function() {
      return this.nodeType;
    };

    return GrammarBase;

  })();

  FragFn = (function(_super) {

    __extends(FragFn, _super);

    function FragFn(name, params, action, meta) {
      this.name = name;
      this.params = params;
      this.action = action;
      FragFn.__super__.constructor.call(this, "FF", meta);
    }

    return FragFn;

  })(GrammarBase);

  FFAction = (function(_super) {

    __extends(FFAction, _super);

    function FFAction(caseTreeList, where, meta) {
      this.caseTreeList = caseTreeList;
      this.where = where;
      FFAction.__super__.constructor.call(this, "FFAction", meta);
    }

    return FFAction;

  })(GrammarBase);

  FFCaseTree = (function(_super) {

    __extends(FFCaseTree, _super);

    function FFCaseTree(nodeId, nodeDef, meta) {
      this.nodeId = nodeId;
      this.nodeDef = nodeDef;
      FFCaseTree.__super__.constructor.call(this, "FFCaseTree", meta);
    }

    return FFCaseTree;

  })(GrammarBase);

  FFNodeDef = (function(_super) {

    __extends(FFNodeDef, _super);

    function FFNodeDef(dtDef, btDef, caseTreeList, tOrder, meta) {
      this.dtDef = dtDef;
      this.btDef = btDef;
      this.caseTreeList = caseTreeList;
      this.tOrder = tOrder;
      FFNodeDef.__super__.constructor.call(this, "FFNodeDef", meta);
    }

    return FFNodeDef;

  })(GrammarBase);

  FFNodeFn = (function(_super) {

    __extends(FFNodeFn, _super);

    function FFNodeFn(preRecFn, postRefFn, meta) {
      this.preRecFn = preRecFn;
      this.postRefFn = postRefFn;
      FFNodeFn.__super__.constructor.call(this, "NodeFn", meta);
    }

    return FFNodeFn;

  })(GrammarBase);

  SWY = (function(_super) {

    __extends(SWY, _super);

    function SWY(style, where, _yield, meta) {
      this.style = style;
      this.where = where;
      this["yield"] = _yield;
      SWY.__super__.constructor.call(this, "SWY", meta);
    }

    return SWY;

  })(GrammarBase);

  module.exports = {
    FragFn: FragFn,
    FFAction: FFAction,
    FFCaseTree: FFCaseTree,
    FFNodeDef: FFNodeDef,
    FFNodeFn: FFNodeFn,
    SWY: SWY
  };

}).call(this);
